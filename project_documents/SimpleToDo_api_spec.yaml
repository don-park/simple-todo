openapi: 3.0.0
info:
  title: SimpleToDo API
  description: API specification for SimpleToDo Web Application
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
paths:
  /auth/register:
    post:
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Email already registered

  /auth/login:
    post:
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Logged-in successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Invalid email or password

  /auth/logout:
    post:
      summary: 로그아웃
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Logged-out successful

  /todos:
    get:
      summary: ToDo 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, due_date]
      responses:
        '200':
          description: Return Todo list

    post:
      summary: ToDo 항목 생성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                due_date:
                  type: string
                  format: date
              required:
                - title
      responses:
        '201':
          description: Create Todo item completed
        '400':
          description: Invalid requests

  /todos/{todo_id}:
    patch:
      summary: ToDo 항목 수정
      security:
        - bearerAuth: []
      parameters:
        - name: todo_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                due_date:
                  type: string
                  format: date
                is_done:
                  type: boolean
      responses:
        '200':
          description: Modify Todo item completed
        '404':
          description: Todo item not found

    delete:
      summary: ToDo 항목 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: todo_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Delete Todo item completed
        '404':
          description: Todo not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT